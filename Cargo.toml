[workspace]
members = [
	"crates/cargo-gpu",
	"crates/xtask",
]

exclude = [
	# This currently needs to be excluded because it depends on a version of `rust-gpu` that
	# uses a toolchain whose Cargo version doesn't recognise version 4 of `Cargo.lock`.
	"crates/shader-crate-template"
]

resolver = "2"

[workspace.dependencies]
spirv-builder = { git = "https://github.com/Rust-GPU/rust-gpu", rev = "86fc48032c4cd4afb74f1d81ae859711d20386a1", default-features = false }
anyhow = "1.0.94"
clap = { version = "4.5.37", features = ["derive"] }
crossterm = "0.28.1"
directories = "5.0.1"
env_logger = "0.10"
log = "0.4"
relative-path = "1.9.3"
serde = { version = "1.0.214", features = ["derive"] }
serde_json = "1.0.132"
toml = "0.8.19"
tempdir = "0.3.7"
test-log = "0.2.16"
cargo_metadata = "0.19.2"
semver = "1.0.26"
naga = "25.0.1"

# This crate MUST NEVER be upgraded, we need this particular "first" version to support old rust-gpu builds
legacy_target_specs = { package = "rustc_codegen_spirv-target-specs", version = "0.9.0", features = ["include_str"] }

[workspace.lints.rust]
missing_docs = "warn"

[workspace.lints.clippy]
all = { level = "warn", priority = 0 }
pedantic = { level = "warn", priority = 0 }
nursery = { level = "warn", priority = 0 }
cargo = { level = "warn", priority = 0 }
restriction = { level = "warn", priority = 0 }
blanket_clippy_restriction_lints = { level = "allow", priority = 1 }

arithmetic_side_effects = { level = "allow", priority = 1 }
absolute_paths = { level = "allow", priority = 1 }
cargo_common_metadata = { level = "allow", priority = 1 }
implicit_return = { level = "allow", priority = 1 }
single_call_fn = { level = "allow", priority = 1 }
question_mark_used = { level = "allow", priority = 1 }
multiple_crate_versions = { level = "allow", priority = 1 }
pub_with_shorthand = { level = "allow", priority = 1 }
partial_pub_fields = { level = "allow", priority = 1 }
pattern_type_mismatch = { level = "allow", priority = 1 }
std_instead_of_alloc = { level = "allow", priority = 1 }
arbitrary_source_item_ordering = { level = "allow", priority = 1 }
